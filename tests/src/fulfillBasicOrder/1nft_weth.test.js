import { nano_models, processTest, populateTransaction } from "../test.fixture";

const contractName = "SeaPort";
const contractAddr = "0x00000000006c3852cbef3e08e8df289169ede581";
const testNetwork = "ethereum";

const testLabel = "fullfilBasicOrder 1nft_weth"; // <= Name of the test
const testDirSuffix = testLabel.toLowerCase().replace(/\s+/g, '_');

// https://etherscan.io/tx/0x09c6e192658c087544394e1d2acccbf69a08be078b6873ce3f6d323d51c09e7e
const inputData = "0xfb0f3ee10000000000000000000000000000000000000000000000000000000000000020000000000000000000000000a73f20a8036dc9408448b1510e4f8007fd8cd6c90000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000010950f5b0a7fb0d872e2afd2c6724bcf427371f0000000000000000000000000004c00500000ad104d7dbd00e3ae0a5c00560c00000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000058d15e1762800000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000062e82ea50000000000000000000000000000000000000000000000000000000062ec1fc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005ae3e4ca6df1ca0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f00000000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f00000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000008de9c5a032463c561423387a9648c5c7bcc5bc900000000000000000000000000000000000000000000000000008e1bc9bf040000000000000000000000000000b4f454aa887327f291869327bd9f419b07c550c0000000000000000000000000000000000000000000000000000000000000041aaa882a1d4e256f13360d50bf5b16a338b2aa19cb848094458e460c9fe257eac6b623b8d4c687fd266ddac3b9e642e3317f416ea14b05626f6c7f5da89a9dfe31c00000000000000000000000000000000000000000000000000000000000000";
const models = [
  {
    name: 'nanos',
    steps: 8
  },
  {
    name: 'nanox',
    steps: 6
  },
  {
    name: 'nanosp',
    steps: 6
  },
]

// populate unsignedTx from genericTx and get network chain id
const unsignedTx = populateTransaction(contractAddr, inputData, testNetwork);
// Process tests for each nano models
models.forEach((model) => {
  const nano_model = nano_models.find((nano_model) => nano_model.name === model.name)
  processTest(nano_model, model.steps, contractName, testLabel, testDirSuffix, unsignedTx, testNetwork)
})
