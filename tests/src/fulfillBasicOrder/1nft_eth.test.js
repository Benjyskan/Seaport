import { nano_models, processTest, populateTransaction } from "../test.fixture";

const contractName = "SeaPort";
const contractAddr = "0x00000000006c3852cbef3e08e8df289169ede581";
const testNetwork = "ethereum";

const testLabel = "fullfilBasicOrder eth_nft"; // <= Name of the test
const testDirSuffix = testLabel.toLowerCase().replace(/\s+/g, '_');

// https://etherscan.io/tx/0x37b985fbe01499b366ac9c0eba48a46639821becd9fae2affacb682d7c4b0864
const inputData = "0xfb0f3ee100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dc9f9ef88d4000000000000000000000000000bf5be25a765475c4d10dd8957038487ba973d2a0000000000000000000000000004c00500000ad104d7dbd00e3ae0a5c00560c00000000000000000000000000248a74f64bbf422dae243ed5d58ef0dd7298b972000000000000000000000000000000000000000000000000000000000000149e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000634019db000000000000000000000000000000000000000000000000000000006369066b0000000000000000000000000000000000000000000000000000000000000000360c6ebe0000000000000000000000000000000000000000b2900da8d3fe53d10000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f00000000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f00000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000620e0dc3cd0000000000000000000000000000000a26b00c1f0df003000390027140000faa719000000000000000000000000000000000000000000000000001262a294b67000000000000000000000000000d444929dfd6255fdb7ec66aba4457e0eb9b9f068000000000000000000000000000000000000000000000000000000000000004159113ba1a23503c7a742ca314a18a358970847bb2b7bec675a7dbecae77d44b83ca80e0c0636e5cc93ebd146a5c260404a0184c8da9bc6f52026f6ad17317bfa1b00000000000000000000000000000000000000000000000000000000000000360c6ebe";

const models = [
  {
    name: 'nanos',
    steps: 5
  },
  // {
  // 	name: 'nanox',
  // 	steps: 0
  // },
]

// populate unsignedTx from genericTx and get network chain id
const unsignedTx = populateTransaction(contractAddr, inputData, testNetwork);
// Process tests for each nano models
models.forEach((model) => {
  const nano_model = nano_models.find((nano_model) => nano_model.name === model.name)
  processTest(nano_model, model.steps, contractName, testLabel, testDirSuffix, unsignedTx, testNetwork)
})
